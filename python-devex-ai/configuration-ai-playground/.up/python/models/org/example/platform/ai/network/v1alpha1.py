# generated by datamodel-codegen:
#   filename:  workdir/ai_platform_example_org_v1alpha1_network.yaml

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from ......io.k8s.apimachinery.pkg.apis.meta import v1


class CompositeDeletePolicy(Enum):
    Background = 'Background'
    Foreground = 'Foreground'


class CompositionRef(BaseModel):
    name: str


class CompositionRevisionRef(BaseModel):
    name: str


class CompositionRevisionSelector(BaseModel):
    matchLabels: Dict[str, str]


class CompositionSelector(BaseModel):
    matchLabels: Dict[str, str]


class CompositionUpdatePolicy(Enum):
    Automatic = 'Automatic'
    Manual = 'Manual'


class ConfigRef(BaseModel):
    name: Optional[str] = None


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    labels: Optional[Dict[str, str]] = None
    type: Optional[str] = None


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    metadata: Optional[Metadata] = None
    name: str


class Region(Enum):
    ap_southeast_1 = 'ap-southeast-1'
    eu_central_1 = 'eu-central-1'
    eu_north_1 = 'eu-north-1'
    eu_west_1 = 'eu-west-1'
    sa_east_1 = 'sa-east-1'
    us_east_1 = 'us-east-1'
    us_west_2 = 'us-west-2'


class ResourceRef(BaseModel):
    apiVersion: str
    kind: str
    name: str


class Subnet(BaseModel):
    availabilityZone: str
    cidrBlock: str
    type: str


class WriteConnectionSecretToRef(BaseModel):
    name: str


class Spec(BaseModel):
    compositeDeletePolicy: Optional[CompositeDeletePolicy] = None
    compositionRef: Optional[CompositionRef] = None
    compositionRevisionRef: Optional[CompositionRevisionRef] = None
    compositionRevisionSelector: Optional[CompositionRevisionSelector] = None
    compositionSelector: Optional[CompositionSelector] = None
    compositionUpdatePolicy: Optional[CompositionUpdatePolicy] = None
    id: str
    providerConfigName: Optional[str] = 'default'
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    region: Optional[Region] = 'us-east-1'
    resourceRef: Optional[ResourceRef] = None
    subnets: List[Subnet]
    vpcCidrBlock: str
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    message: Optional[str] = None
    reason: str
    status: str
    type: str


class ConnectionDetails(BaseModel):
    lastPublishedTime: Optional[AwareDatetime] = None


class Xnetwork(BaseModel):
    subnets: Optional[List[Dict[str, Any]]] = None
    vpcCidrBlock: Optional[str] = None


class Status(BaseModel):
    claimConditionTypes: Optional[List[str]] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    connectionDetails: Optional[ConnectionDetails] = None
    xnetwork: Optional[Xnetwork] = None


class Network(BaseModel):
    apiVersion: Optional[str] = 'ai.platform.example.org/v1alpha1'
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = 'Network'
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    NetworkSpec defines the desired state of Network.
    """
    status: Optional[Status] = None
    """
    NetworkStatus defines the observed state of Network.
    """


class FieldModel(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[Network]
    """
    List of networks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """